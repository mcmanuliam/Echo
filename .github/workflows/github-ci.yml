name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'
          cache: 'npm'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Create src/config/local.ts
        run: |
          mkdir -p src/config
          echo "interface ILocalConfig {" > src/config/local.ts
          echo "  backendKey: string;" >> src/config/local.ts
          echo "  backendUrl: string;" >> src/config/local.ts
          echo "}" >> src/config/local.ts
          echo "" >> src/config/local.ts
          echo "export const local: ILocalConfig = {" >> src/config/local.ts
          echo "  backendKey: '${{ secrets.BACKEND_KEY }}'," >> src/config/local.ts
          echo "  backendUrl: '${{ secrets.BACKEND_URL }}'," >> src/config/local.ts
          echo "};" >> src/config/local.ts

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build the project
        run: npm run build

      - name: Run ESLint
        run: npm run lint

  # Job to build and run the iOS app
  build-ios:
    runs-on: macos-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Create src/config/local.ts
        run: |
          mkdir -p src/config
          echo "interface ILocalConfig {" > src/config/local.ts
          echo "  backendKey: string;" >> src/config/local.ts
          echo "  backendUrl: string;" >> src/config/local.ts
          echo "}" >> src/config/local.ts
          echo "" >> src/config/local.ts
          echo "export const local: ILocalConfig = {" >> src/config/local.ts
          echo "  backendKey: '${{ secrets.BACKEND_KEY }}'," >> src/config/local.ts
          echo "  backendUrl: '${{ secrets.BACKEND_URL }}'," >> src/config/local.ts
          echo "};" >> src/config/local.ts

      - name: Build the project for iOS
        run: |
          npm run build
          npx ionic cap copy ios
          npx ionic cap sync ios

      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode.app

      - name: Build iOS App
        run: npx ionic cap build ios --no-open

  # fix[md]: Remove android #17
  # TOOD: In the case android is added back uncomment.

  # Job to build and run the Android app
  # build-android:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18.19'
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci --legacy-peer-deps

  #     - name: Create src/config/local.ts
  #       run: |
  #         mkdir -p src/config
  #         echo "interface ILocalConfig {" > src/config/local.ts
  #         echo "  backendKey: string;" >> src/config/local.ts
  #         echo "  backendUrl: string;" >> src/config/local.ts
  #         echo "}" >> src/config/local.ts
  #         echo "" >> src/config/local.ts
  #         echo "export const local: ILocalConfig = {" >> src/config/local.ts
  #         echo "  backendKey: '${{ secrets.BACKEND_KEY }}'," >> src/config/local.ts
  #         echo "  backendUrl: '${{ secrets.BACKEND_URL }}'," >> src/config/local.ts
  #         echo "};" >> src/config/local.ts

  #     - name: Build the project for Android
  #       run: |
  #         npm run build
  #         npx ionic cap copy android
  #         npx ionic cap sync android

  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: '17'

  #     - name: Build Android App
  #       run: npx ionic cap build android --no-open
